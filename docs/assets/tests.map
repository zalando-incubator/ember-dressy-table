{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/app.lint-test.js","dummy/tests/datasets/tables.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/d-filter-test.js","dummy/tests/integration/components/d-footer-test.js","dummy/tests/integration/components/d-header-test.js","dummy/tests/integration/components/d-pagination-test.js","dummy/tests/integration/components/d-sorter-test.js","dummy/tests/integration/components/d-table-test.js","dummy/tests/integration/components/d-tbody-test.js","dummy/tests/integration/components/d-tr-test.js","dummy/tests/integration/components/dtab/selectable-cell-test.js","dummy/tests/integration/components/dtab/selectable-header-test.js","dummy/tests/page-object.js","dummy/tests/test-helper.js","dummy/tests/tests.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('dummy/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/custom-render.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/custom-render.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/custom-tr.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/custom-tr.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/header-with-action.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/header-with-action.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/pagination-manager.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/pagination-manager.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/sorting-header.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sorting-header.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/doc-pages/docs.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/doc-pages/docs.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/doc-pages.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/doc-pages.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/doc-pages/cookbook.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/doc-pages/cookbook.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/doc-pages/docs.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/doc-pages/docs.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/tests/datasets/tables', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var standardTable = {\n    settings: {},\n    columns: [{ key: 'foo' }, { key: 'bar' }, { key: 'baz' }],\n    data: [{ foo: '1', bar: '2', baz: '3' }, { foo: '4', bar: '5', baz: '6' }, { foo: '7', bar: '8', baz: '9' }]\n  };\n\n  var customRender = {\n    settings: {},\n    columns: [{ key: 'foo' }, { key: 'bar', component: 'custom-render' }, { key: 'baz' }],\n    data: [{ foo: '1', bar: '2', baz: '3' }, { foo: '4', bar: '5', baz: '6' }, { foo: '7', bar: '8', baz: '9' }]\n  };\n\n  var customHeaderRender = {\n    settings: {},\n    columns: [{ key: 'foo' }, { key: 'bar', header: { component: 'custom-render' } }, { key: 'baz' }],\n    data: [{ foo: '1', bar: '2', baz: '3' }, { foo: '4', bar: '5', baz: '6' }, { foo: '7', bar: '8', baz: '9' }]\n  };\n\n  var sortableTable = {\n    settings: {},\n    columns: [{ key: 'foo' }, { key: 'bar' }, { key: 'baz' }],\n    data: [{ foo: '1', bar: '1', baz: '1' }, { foo: '1', bar: '2', baz: '2' }, { foo: '2', bar: '1', baz: '3' }]\n  };\n\n  var nestedDataTable = {\n    settings: {},\n    columns: [{ key: 'foo.one' }, { key: 'foo.two' }, { key: 'bar' }, { key: 'baz' }],\n    data: [{ foo: { one: 'a', two: 'b' }, bar: '1', baz: '4' }, { foo: { one: 'c', two: 'd' }, bar: '2', baz: '5' }, { foo: { one: 'e', two: 'f' }, bar: '3', baz: '6' }]\n  };\n\n  var paginationTable = {\n    settings: {},\n    columns: [{ key: 'foo' }, { key: 'bar' }, { key: 'baz' }],\n    data: function (length) {\n      var i = 0;\n      var result = [];\n      while (i++ < length) {\n        result.push({\n          foo: String(i),\n          bar: String(i),\n          baz: String(i)\n        });\n      }\n      return result;\n    }(100)\n  };\n\n  exports.standardTable = standardTable;\n  exports.customRender = customRender;\n  exports.customHeaderRender = customHeaderRender;\n  exports.sortableTable = sortableTable;\n  exports.nestedDataTable = nestedDataTable;\n  exports.paginationTable = paginationTable;\n  exports.default = standardTable;\n});","define('dummy/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var Promise = Ember.RSVP.Promise;\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('dummy/tests/helpers/start-app', ['exports', 'dummy/app', 'dummy/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('dummy/tests/integration/components/d-filter-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-filter', 'Integration | Component | z filter', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"wqiIwzw+\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"d-filter\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"1FvLmMhT\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-filter\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/d-footer-test', ['ember-qunit', 'dummy/tests/datasets/tables'], function (_emberQunit, _tables) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-footer', 'Integration | Component | z footer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    this.set('table', Object.assign({}, _tables.default, { settings: { footer: true } }));\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ijdp3Kg1\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-footer\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$('tfoot tr td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), 'foo,bar,baz');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"HfvBfv0g\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-footer\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/d-header-test', ['ember-qunit', 'ember-test-helpers/wait', 'dummy/tests/datasets/tables'], function (_emberQunit, _wait, _tables) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-header', 'Integration | Component | z header', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    this.set('table', Object.assign({}, _tables.standardTable));\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M13ofCCm\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-header\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$('thead tr td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(',').trim(), 'foo,bar,baz');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"gitRzTtA\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-header\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n  (0, _emberQunit.test)('it doesnt renders if settings header=false', function (assert) {\n    this.set('table', Object.assign({}, _tables.standardTable, { settings: { header: false } }));\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M13ofCCm\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-header\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$().text().trim(), '');\n  });\n\n  (0, _emberQunit.test)('it renders custom header component', function (assert) {\n    this.set('table', _tables.customHeaderRender);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M13ofCCm\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-header\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('thead tr td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), 'foo,$bar$$,baz');\n  });\n\n  (0, _emberQunit.test)('it renders header value from column.header.value', function (assert) {\n    this.set('table', Object.assign({}, _tables.standardTable, {\n      columns: [{ key: 'foo' }, { key: 'bar', header: { value: 'BAR' } }, { key: 'baz' }]\n    }));\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M13ofCCm\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-header\\\"],null,[[\\\"d-table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('thead tr td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), 'foo,BAR,baz');\n  });\n\n  (0, _emberQunit.test)('it sends action from header component to header', function (assert) {\n    var _this = this;\n\n    var counter = 0;\n\n    // Set any properties with this.set('myProperty', 'value');\n    this.set('table', Object.assign(_tables.standardTable, {\n      columns: [{ key: 'foo' }, { key: 'bar' }, { key: 'baz', header: { component: 'header-with-action' } }]\n    }));\n\n    this.set('headerAction', function () {\n      counter++;\n    });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"xzd/44La\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-header\\\"],null,[[\\\"d-table\\\",\\\"someAction\\\"],[[28,[\\\"table\\\"]],[33,[\\\"action\\\"],[[28,[null]],[28,[\\\"headerAction\\\"]]],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    Ember.run(function () {\n      return _this.$('td:contains(\"baz\")').click();\n    });\n\n    return (0, _wait.default)().then(function () {\n      assert.equal(counter, 1);\n    });\n  });\n});","define('dummy/tests/integration/components/d-pagination-test', ['ember-qunit', 'ember-test-helpers/wait', 'dummy/tests/datasets/tables'], function (_emberQunit, _wait, _tables) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-pagination', 'Integration | Component | z pagination', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ucQcoGSn\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"d-pagination\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"cv5u7qHK\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n  (0, _emberQunit.test)('it paginates data', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 5,\n          currentPage: 1\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"f1zCfaTQ\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,1,1,2,2,2,3,3,3,4,4,4,5,5,5');\n  });\n\n  (0, _emberQunit.test)('it shows second page correctly', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 5,\n          currentPage: 2\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"f1zCfaTQ\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '6,6,6,7,7,7,8,8,8,9,9,9,10,10,10');\n  });\n\n  (0, _emberQunit.test)('it goes to next page', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 5,\n          currentPage: 1\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ewiHM9YL\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"id\\\",\\\"change-next\\\"],[5,[\\\"action\\\"],[[28,[null]],[28,[\\\"p\\\",\\\"pagination\\\",\\\"changeNext\\\"]]]],[13],[0,\\\">\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    this.$('#change-next').click();\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '6,6,6,7,7,7,8,8,8,9,9,9,10,10,10');\n  });\n\n  (0, _emberQunit.test)('it goes to previous page', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 5,\n          currentPage: 2\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"HSmPqiO2\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"id\\\",\\\"change\\\"],[5,[\\\"action\\\"],[[28,[null]],[28,[\\\"p\\\",\\\"pagination\\\",\\\"changePrevious\\\"]]]],[13],[0,\\\">\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    this.$('#change').click();\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,1,1,2,2,2,3,3,3,4,4,4,5,5,5');\n  });\n\n  (0, _emberQunit.test)('it changes data when pageSize is changed', function (assert) {\n    var _this = this;\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 5,\n          currentPage: 1\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"HSmPqiO2\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"id\\\",\\\"change\\\"],[5,[\\\"action\\\"],[[28,[null]],[28,[\\\"p\\\",\\\"pagination\\\",\\\"changePrevious\\\"]]]],[13],[0,\\\">\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,1,1,2,2,2,3,3,3,4,4,4,5,5,5');\n    this.set('table.state.pagination.pageSize', 2);\n    return (0, _wait.default)().then(function () {\n      assert.equal(_this.$('table tbody td').map(function (i, item) {\n        return item.innerHTML;\n      }).toArray().join(','), '1,1,1,2,2,2');\n    });\n  });\n\n  (0, _emberQunit.test)('it calculates lastPage right for length 100 and pageSize 33', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 33,\n          currentPage: 1\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"/goiqabW\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[11,\\\"div\\\",[]],[15,\\\"id\\\",\\\"last-page\\\"],[13],[1,[28,[\\\"p\\\",\\\"pagination\\\",\\\"lastPage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('#last-page').html(), '4');\n  });\n\n  (0, _emberQunit.test)('it calculates lastPage right for length 100 and pageSize 2', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.paginationTable, {\n      state: {\n        pagination: {\n          pageSize: 2,\n          currentPage: 1\n        }\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"/goiqabW\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-pagination\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"p\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[11,\\\"div\\\",[]],[15,\\\"id\\\",\\\"last-page\\\"],[13],[1,[28,[\\\"p\\\",\\\"pagination\\\",\\\"lastPage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"p\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('#last-page').html(), '50');\n  });\n});","define('dummy/tests/integration/components/d-sorter-test', ['ember-qunit', 'dummy/tests/datasets/tables'], function (_emberQunit, _tables) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-sorter', 'Integration | Component | z sorter', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Imu6Yi8Y\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"d-sorter\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"zgukGuaj\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-sorter\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n  (0, _emberQunit.test)('it sorts data using 1 key', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.sortableTable, {\n      state: {\n        sorting: ['foo:desc']\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"bHlC9HTp\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-sorter\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"s\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"s\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '2,1,3,1,1,1,1,2,2');\n  });\n\n  (0, _emberQunit.test)('it sorts data using 2 keys', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.sortableTable, {\n      state: {\n        sorting: ['foo:desc', 'bar:desc']\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"bHlC9HTp\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-sorter\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"s\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"s\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '2,1,3,1,2,2,1,1,1');\n  });\n\n  (0, _emberQunit.test)('it sorts nested data using nested key', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.nestedDataTable, {\n      state: {\n        sorting: ['foo.one:desc']\n      }\n    }));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"bHlC9HTp\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-sorter\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"s\\\",\\\"table\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"s\\\"]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), 'e,f,3,6,c,d,2,5,a,b,1,4');\n  });\n});","define('dummy/tests/integration/components/d-table-test', ['ember-qunit', 'ember-test-helpers/wait', 'dummy/tests/datasets/tables'], function (_emberQunit, _wait, _tables) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-table', 'Integration | Component | z table', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"/hmfnhji\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"d-table\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n\n  (0, _emberQunit.test)('it renders basic data by default', function (assert) {\n    this.set('table', _tables.standardTable);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"G7XBCRbj\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    // header\n    assert.equal(this.$('table thead tr td').map(function (i, item) {\n      return item.innerHTML.trim();\n    }).toArray().join(','), 'foo,bar,baz');\n\n    //body\n    assert.equal(this.$('table tbody tr').length, 3);\n    assert.equal(this.$('table tbody td').length, 9);\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,2,3,4,5,6,7,8,9');\n  });\n\n  (0, _emberQunit.test)('it doesnt renders headers if settings have header = false', function (assert) {\n    this.set('table', Object.assign({}, _tables.standardTable, { settings: { header: false } }));\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"G7XBCRbj\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$('table thead').length, 0);\n    assert.equal(this.$('table tbody tr').length, 3);\n  });\n\n  (0, _emberQunit.test)('it renders cells with custom component', function (assert) {\n    this.set('table', _tables.customRender);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"G7XBCRbj\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody tr').length, 3);\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,$2$$,3,4,$5$$,6,7,$8$$,9');\n  });\n\n  (0, _emberQunit.test)('it handles changing data', function (assert) {\n    var _this = this;\n\n    var changedStandardData = _tables.standardTable.data.map(function (i) {\n      return new Ember.Object(i);\n    });\n    changedStandardData[0].set('foo', \"2\");\n    this.set('table', _tables.standardTable);\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"G7XBCRbj\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,2,3,4,5,6,7,8,9');\n    this.set('table', Object.assign({}, _tables.standardTable, {\n      data: changedStandardData\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '2,2,3,4,5,6,7,8,9');\n    Ember.run(function () {\n      changedStandardData[0].set('foo', \"3\");\n    });\n    return (0, _wait.default)().then(function () {\n      assert.equal(_this.$('table tbody td').map(function (i, item) {\n        return item.innerHTML;\n      }).toArray().join(','), '3,2,3,4,5,6,7,8,9');\n    });\n  });\n\n  (0, _emberQunit.test)('it handles changing column order', function (assert) {\n    var _this2 = this;\n\n    this.set('table', new Ember.Object(_tables.standardTable));\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"G7XBCRbj\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), '1,2,3,4,5,6,7,8,9');\n\n    this.set('table.columns', [{ key: 'bar' }, { key: 'foo' }, { key: 'baz' }]);\n    return (0, _wait.default)().then(function () {\n      assert.equal(_this2.$('table tbody td').map(function (i, item) {\n        return item.innerHTML;\n      }).toArray().join(','), '2,1,3,5,4,6,8,7,9');\n    });\n  });\n\n  (0, _emberQunit.test)('it renders nested data using nested key', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n    this.set('table', Object.assign({}, _tables.nestedDataTable));\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"GR+DLcpd\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[1,[33,[\\\"d-table\\\"],null,[[\\\"table\\\"],[[28,[\\\"table\\\"]]]]],false],[0,\\\"\\\\n  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n    assert.equal(this.$('table tbody td').map(function (i, item) {\n      return item.innerHTML;\n    }).toArray().join(','), 'a,b,1,4,c,d,2,5,e,f,3,6');\n  });\n});","define('dummy/tests/integration/components/d-tbody-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-tbody', 'Integration | Component | z tbody', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"cO/PyU6n\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"d-tbody\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"e+7nhPng\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-tbody\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/d-tr-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('d-tr', 'Integration | Component | z tr', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ygwB+FGT\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"d-tr\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"FvpiXTX2\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"d-tr\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/dtab/selectable-cell-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('dtab/selectable-cell', 'Integration | Component | dtab/selectable cell', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"q8QIRqmC\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"dtab/selectable-cell\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"9ciaq00r\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"dtab/selectable-cell\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/dtab/selectable-header-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('dtab/selectable-header', 'Integration | Component | dtab/selectable header', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"kHSvp1fu\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"dtab/selectable-header\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"VTcCAoFR\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"dtab/selectable-header\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/page-object', ['exports', 'ember-cli-page-object'], function (exports, _emberCliPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fullScope = exports.getContext = exports.findElement = exports.findElementWithAssert = exports.buildSelector = exports.visitable = exports.value = exports.triggerable = exports.text = exports.property = exports.notHasClass = exports.isVisible = exports.isHidden = exports.is = exports.hasClass = exports.selectable = exports.fillable = exports.create = exports.count = exports.contains = exports.collection = exports.clickable = exports.clickOnText = exports.attribute = exports.alias = undefined;\n  Object.defineProperty(exports, 'buildSelector', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.buildSelector;\n    }\n  });\n  Object.defineProperty(exports, 'findElementWithAssert', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.findElementWithAssert;\n    }\n  });\n  Object.defineProperty(exports, 'findElement', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.findElement;\n    }\n  });\n  Object.defineProperty(exports, 'getContext', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.getContext;\n    }\n  });\n  Object.defineProperty(exports, 'fullScope', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.fullScope;\n    }\n  });\n  exports.alias = _emberCliPageObject.alias;\n  exports.attribute = _emberCliPageObject.attribute;\n  exports.clickOnText = _emberCliPageObject.clickOnText;\n  exports.clickable = _emberCliPageObject.clickable;\n  exports.collection = _emberCliPageObject.collection;\n  exports.contains = _emberCliPageObject.contains;\n  exports.count = _emberCliPageObject.count;\n  exports.create = _emberCliPageObject.create;\n  exports.fillable = _emberCliPageObject.fillable;\n  exports.selectable = _emberCliPageObject.fillable;\n  exports.hasClass = _emberCliPageObject.hasClass;\n  exports.is = _emberCliPageObject.is;\n  exports.isHidden = _emberCliPageObject.isHidden;\n  exports.isVisible = _emberCliPageObject.isVisible;\n  exports.notHasClass = _emberCliPageObject.notHasClass;\n  exports.property = _emberCliPageObject.property;\n  exports.text = _emberCliPageObject.text;\n  exports.triggerable = _emberCliPageObject.triggerable;\n  exports.value = _emberCliPageObject.value;\n  exports.visitable = _emberCliPageObject.visitable;\n  exports.default = {\n    alias: _emberCliPageObject.alias,\n    attribute: _emberCliPageObject.attribute,\n    clickOnText: _emberCliPageObject.clickOnText,\n    clickable: _emberCliPageObject.clickable,\n    collection: _emberCliPageObject.collection,\n    contains: _emberCliPageObject.contains,\n    count: _emberCliPageObject.count,\n    create: _emberCliPageObject.create,\n    fillable: _emberCliPageObject.fillable,\n    hasClass: _emberCliPageObject.hasClass,\n    is: _emberCliPageObject.is,\n    isHidden: _emberCliPageObject.isHidden,\n    isVisible: _emberCliPageObject.isVisible,\n    notHasClass: _emberCliPageObject.notHasClass,\n    property: _emberCliPageObject.property,\n    selectable: _emberCliPageObject.fillable,\n    text: _emberCliPageObject.text,\n    triggerable: _emberCliPageObject.triggerable,\n    value: _emberCliPageObject.value,\n    visitable: _emberCliPageObject.visitable\n  };\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('dummy/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('datasets/tables.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'datasets/tables.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-filter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-filter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-footer-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-footer-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-header-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-header-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-pagination-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-pagination-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-sorter-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-sorter-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-table-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-table-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-tbody-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-tbody-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/d-tr-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/d-tr-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/dtab/selectable-cell-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/dtab/selectable-cell-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/dtab/selectable-header-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/dtab/selectable-header-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;","file":"tests.js"}